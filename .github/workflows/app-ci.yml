name: Spring-Petclinic-CI

on:
  push:
    branches:
      - master
      - dev
    paths-ignore:
      - 'terraform/**'
      
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_JSON }}
    - name: Configure Docker
      run: gcloud auth configure-docker asia-docker.pkg.dev --quiet
    - name: Build Docker Image
      run: |
        docker build -t asia-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/petclinic/petclinic:${{ vars.APP_TAG }} .
        docker tag asia-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/petclinic/petclinic:${{ vars.APP_TAG }} asia-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/petclinic/petclinic:latest
    - name: Push Image to Google Artifact Registry
      run: |
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/petclinic-app:${{ vars.APP_TAG }}
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/petclinic-app:latest

  deploy:
    defaults:
      run:
        shell: bash
        working-directory: .
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Replace secrets in Docker compose file
      env:
        POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        APP_TAG: ${{ vars.APP_TAG }}
      run: |
        sed -i "s/%POSTGRES_URL%/$POSTGRES_URL/g" docker-compose.yml
        sed -i "s/%POSTGRES_USER%/$POSTGRES_USER/g" docker-compose.yml
        sed -i "s/%POSTGRES_PASSWORD%/$POSTGRES_PASSWORD/g" docker-compose.yml
        sed -i "s/%POSTGRES_DB%/$POSTGRES_DB/g" docker-compose.yml
        sed -i "s/%APP_TAG%/$APP_TAG/g" docker-compose.yml
    - name: Set up Google Cloud credentials
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_JSON }}
      run: |
        echo "${GOOGLE_APPLICATION_CREDENTIALS}" | base64 --decode > "${HOME}/gcloud-key.json"
        gcloud auth activate-service-account --key-file="${HOME}/gcloud-key.json"
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud config set compute/zone ${{ vars.GCP_ZONE }}
    - name: Set up SSH key
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "${SSH_PRIVATE_KEY}" > ~/.ssh/iap_github_action
        chmod 600 ~/.ssh/iap_github_action
    - name: Copy docker compose & NGINX files to VM
      run: |
        gcloud compute scp \
          --tunnel-through-iap \
          --ssh-key-file ~/.ssh/iap_github_action \
          --zone ${{ vars.GCP_ZONE }} \
          docker-compose.yml deploy.sh nginx.conf ${{ vars.GCP_INSTANCE_NAME }}:~/
    - name: Run deployment script
      run: |
        gcloud compute ssh ${{ vars.GCP_INSTANCE_NAME }} \
          --tunnel-through-iap \
          --ssh-key-file ~/.ssh/iap_github_action \
          --zone ${{ vars.GCP_ZONE }} \
          --command "./deploy.sh"